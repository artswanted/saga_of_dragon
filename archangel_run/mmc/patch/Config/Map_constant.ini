// 1. [Section_name] 작성하기
//       form : [ _번호 _이름]
//       ex : [ 1 Monster]   Monster 종류를 1번으로 선언
// 2. 변수값 정의
//        form : _변수명 = _번호 _값
//        ex : name1 = 1 100   (name1이라는 변수를 type=1, value=100 으로 선언) int type
//        ex : name2 = 2 "string2" (name2 라는 변수를 type=2 value=std::wstring(_T("string2")) 으로 선언) std::wstring type
//        ex : name3 = 3 3.14 (name3 이라는 변수를 type=3, value=3.14f 으로 선언) float type
//  3. 지원하는 변수 타입
//      std::wstring : double quotation 으로 묶어 주어야 함
//      float : 숫자안에 dot(.) 이 포함되어 있어야 함.
//      int : 일반 숫자


[1 HUNTING]
		//	Monster Kill count 할 것인가? 0(안한다), 1(한다)
MonsterKill_SystemEnable = 1 1
		//	Monster Kill Reset을 언제 할 것인가?
MonsterKill_ResetCount = 2 1000
		//	얼마 마다 패킷을 쏴줄 꺼냐?
MonsterKill_PerMsg = 3 1
		//	얼마 에서 얼마 차이의 몬스터만 카운트 할거냐? <= , >=
MonsterKill_CanMinDiffLevel = 4 -15
MonsterKill_CanMaxDiffLevel = 5 15
		//	얼마 에서 얼마 차이의 몬스터만 경험치를 줄거냐? <=, >=
MonsterExp_CanMinDiffLevel = 6 -15
MonsterExp_CanMaxDiffLevel = 7 15
		//	다른 사람의 소유권의 아이템을 몇초가 지나면 풀어 줄거나 (1/1000초)
DropBox_CanAnyPickUpItem = 8 10000
		//	Fran 습득 경험치 % (10%임)
FranExp = 9 6

[2 GUILD]
		//	길드 생성 제한 캐릭터 레벨 조정 (같거나 크면 생성 가능)
Guild_CanCreateLevel = 1 10

; 엠포리아 기능을 이용 할 수 있는 최소 레벨
Emporia_CanUseFunction = 2 20

; 엠포리아전쟁 최소 유저 카운트 수
Emporia_Battle_UserCount_MinInTeam = 3 1

; 엠포리아전쟁 최대 유저 카운트 수
Emporia_Battle_UserCount_MaxInTeam = 4 25

; 엠포리아전쟁(드래곤방어전) 수비팀이 이기는 점수
Emporia_Battle_ProtectedDragon_DefenceWinPoint = 5 3000

; 엠포리아전쟁(코어파괴전) 공격권한을 가지는 점수
Emporia_Battle_DestroyCore_Auth_TotalPoint = 6 100

; 엠포리아전쟁(코어파괴전) 유닛을 죽였을때 주는 권한 점수
Emporia_Battle_DestroyCore_Unit_KillPoint= 7 2

[3 Player]
	//	Player AutoHeal 값에 곱해지는 값 (마을아닌곳에 있을 경우)
	//	0.0 = not auto heal, 1.0 = 정상AutoHeal 값
AutoHeal_Multiplier_NotInVillage = 1 0.1

[4 AI]
	//	잡몹도 바닥으로 Ray를 쏴서 캐릭터의 위치를 검출할 것인가. 0이면 잡몹, 정예 구분없이 검출, 1이면 정예만
UseDetailAI = 1 0
	//	몬스터가 캐릭터를 찾기 위해 바닥으로 Ray를 쏠때 매번 쏘지 않고 한Tick에 한번만 쏘도록 캐싱하여 사용(사용하면 1, 캐싱없이 매번 쏘면 0)
UseRayCache = 2 1

[5 System]
	// Debugging  mode 로 서버를 실행시킨다.
DebugMode = 1 0

[6 Mission]
PartyMember1_AttackScore = 1 50
PartyMember2_AttackScore = 2 50
PartyMember3_AttackScore = 3 20
PartyMember4_AttackScore = 4 20
PartyMember1_ComboScore = 5 48
PartyMember2_ComboScore = 6 48
PartyMember3_ComboScore = 7 30
PartyMember4_ComboScore = 8 30
PartyMember1_DemageScore = 9 20
PartyMember2_DemageScore = 10 20
PartyMember3_DemageScore = 11 40
PartyMember4_DemageScore = 12 40
PartyMember1_TimeSec = 13 100
PartyMember2_TimeSec = 14 100
PartyMember3_TimeSec = 15 100
PartyMember4_TimeSec = 16 100
PartyMember1_TimeScore = 17 1
PartyMember2_TimeScore = 18 1
PartyMember3_TimeScore = 19 1
PartyMember4_TimeScore = 20 1
PartyMember1_DieScore = 21 300
PartyMember2_DieScore = 22 250
PartyMember3_DieScore = 23 200
PartyMember4_DieScore = 24 150
OverHitScore = 25 300
BackAttack = 26 150
Counter = 27 30
StyleScore = 28 360
; Spawn monster every 10sec, first wave start in EVar_Mission_EscortMonSpawnDelay / 2
EVar_Mission_EscortMonSpawnDelay = 39 10000

; 미션 포기시에 미션진입불가능 카운트( MAX 999 )
ThrowUpPenaltyCount = 29 0

; 미션 진입불가능 유지 시간(초단위)
ThrowUpPenaltyTime = 30 0

;정예방 타임 리미트, 수치는 숫자로 분
TimeLimitParty1 = 31 20
TimeLimitParty2 = 32 18
TimeLimitParty3 = 33 16
TimeLimitParty4 = 34 14

;디팬스 모드에서 타워만 패는 몬스터 % 조절
DefenceObjectAttackMonCount = 35 100
;디팬스 모드에서 타워만 패는 몬스터가 타겟 변경할 확률(만분율, 1000=10%)
DefenceChangeTargetRate = 36 500

;디팬스7 모드에서 타워만 패는 몬스터 % 조절
Defence7ObjectAttackMonCount = 37 100
;디팬스7 모드에서 타워만 패는 몬스터가 타겟 변경할 확률(만분율, 1000=10%)
Defence7ChangeTargetRate = 38 500



[7 Socket]

Socket_Generate_SuccessRate = 1 2000

[8 LogLevel]
LogOutputType = 1 7	;File(1), Console(4), All(7)
LogLevelLimit = 2 9
LogIgnoreConsole = 3 0
EachMap_PlayTimeLog_Interval_Min = 4 60

;[9 ExpCard]

[10 OPENMARKET]
;오픈마켓에서 캐쉬아이템을 등록할 수 있는 설정(0: 사용안함, 1: 사용)
EnableRegCashCost = 1 1

[11 Pet]
; 펫의 상태(경험치 얻기) 업데이트 주기(초)
UpdateSecTime = 1 60

[12 GMContents]
GM_Emoticon = 1 500

[13 MYHOME]
;마이홈 경매 등록 최소가격 (골드)
AuctionLimitGold = 1 30
; 마이홈 아파트 가격
EVar_MyHome_Apt_Gold = 2 200000
; 마이홈 아파트 구매 가능 레벨 (>=)
EVar_MyHome_Apt_LevelLimit = 3 25

[14 Entity Ext Info]
; Player의 크리티컬 공격력을 가져 온다.
EntityCritialAttack = 1 1
; Player의 Hit율을 가져 온다.
EntityHitRate = 2 1
; Player의 추가적인 공격력 관련 능력치들을 가져온다.
EntityAttackExtInfo = 3 1

[15 HIDDEN]
;히든맵 입장가능 시간설정(설정된 분까지 입장이 가능, Max : 59, 비정상 값은 10으로 셋팅됨) 
Open_Min = 1 10
;히든맵에서 얻는 조각 아이템
Stone_Item = 2 50903600

[16 EachClassAwakeValueReviser]
;몬스터 죽였을때 차는 각성치 계산에 사용되는 클래스상수 값. 계산식 : (((유저레벨/20)*(몬스터레벨-유저레벨))+(콤보/5))*(클래스상수) 
;값이 없을때 Default 값은 2.4
KNIGHT 		= 1 2.4	
WARRIOR 	= 2 2.0
MAGE		= 3 1.6
BATTLEMAGE	= 4 1.8
HUNTER 		= 5 2.4
RANGER 		= 6 2.2
CLOWN		= 7 2.4
ASSASSIN 	= 8 2.4
SHAMAN		= 9 1.6
DOUBLEFIGHTER	= 10 2.4

[17 JobSkillPenalty]
;직업스킬 단계별 획득 퍼센트(100%단위)
JobPenalty_1st	= 1	95
JobPenalty_2nd	= 2	85
JobPenalty_3rd	= 3 	50
JobPenalty_4th	= 4 	40
JobPenalty_5th	= 5 	30
JobPenalty_6th	= 6 	10
JobPenalty_7th	= 7 	5
JobPenalty_8th	= 8 	5
JobPenalty_9th	= 9 	5
JobPenalty_10th	= 10 	5
JobPenalty_11th	= 11 	5
JobPenalty_12th	= 12 	5
JobPenalty_13th	= 13 	5
JobPenalty_14th	= 14 	5

// 기준 숙련도와 차이에 따른 숙련도 획득량
JobPenalty_BaseExp_Diff_1 = 30	80
JobPenalty_BaseExp_Diff_2 = 31	50
JobPenalty_BaseExp_Diff_3 = 32	20
JobPenalty_BaseExp_Diff_4 = 33	10
[18 EVar_Kind_DualKeyboardHack]
eVar_DualKeyboardHack_TIME_MSEC = 1 600000
eVar_DualKeyboardHack_MATCH_RATE = 2 2000

[19 EVar_Kind_Premium_Service]
VIP_Emoticon = 1 501

[20 EVar_Kind_Enchant]
EVar_Downgrade_Rate = 1 25
