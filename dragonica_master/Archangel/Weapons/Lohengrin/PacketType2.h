#ifndef WEAPON_LOHENGRIN_PACKET_PACKETTYPE2_H
#define WEAPON_LOHENGRIN_PACKET_PACKETTYPE2_H

unsigned short const PACKET_TYPE2_BASE = 20000;
unsigned short const PACKET_TYPE2_MAX = 29999;

// GM_PACKET Reserve : 20000 - 20299
unsigned short const GM_PACKET_BASE = PACKET_TYPE2_BASE;
// God Command Reserve : 20300 - 20499
unsigned short const PACKET_GOD_COMMAND_BASE = PACKET_TYPE2_BASE + 300;
// Consent packet Reserve : 20500 ~ 20699
unsigned short const PACKET_CONSENT_PACKET = PACKET_TYPE2_BASE + 500;

PACKET_DEF( PT_T_A_SYNC_DATA, PACKET_TYPE2_BASE+0)

// int iCommandType(EGMCommandType ...)
PACKET_DEF( PT_GM_A_REQ_GMCOMMAND, GM_PACKET_BASE+1)
PACKET_DEF( PT_A_GM_ANS_GMCOMMAND, GM_PACKET_BASE+2)
PACKET_DEF( PT_A_GM_NFY_ORDER_STATE, GM_PACKET_BASE+3)
//PACKET_DEF( PT_I_T_KICKUSER, GM_PACKET_BASE+4)
//PACKET_DEF( PT_R_A_REQ_GMCOMMAND, GM_PACKET_BASE+3)
//PACKET_DEF( PT_A_G_WRAPPED_PACKET, GM_PACKET_BASE+4)
PACKET_DEF( PT_L_GM_REQ_GMTOOL, GM_PACKET_BASE+5)			//Login->GM Server
PACKET_DEF( PT_GM_L_ANS_GMTOOL, GM_PACKET_BASE+6)			//GM->Login
PACKET_DEF( PT_GM_A_REQ_GMORDER, GM_PACKET_BASE+7)			
PACKET_DEF( PT_A_GM_ANS_GMORDER, GM_PACKET_BASE+8)		
PACKET_DEF( PT_A_GM_ANS_FAILED_GMORDER, GM_PACKET_BASE+9) //GM_Order Failed!
PACKET_DEF( PT_M_A_REQ_GMCOMMAND, GM_PACKET_BASE+12)			//Map-> All Server(god command)
PACKET_DEF( PT_A_M_ANS_GMCOMMAND, GM_PACKET_BASE+13)			//Map-> All Server(god command)


// Builder Command	(GM_const.h에 있는  EBuilderCommand ...)
PACKET_DEF( PT_M_C_REQ_BUILDER_COMMAND, GM_PACKET_BASE+10)	// Builder Command, Client -> All Server
PACKET_DEF( PT_C_M_ANS_BUILDER_COMMAND, GM_PACKET_BASE+11)	// Builder Command, All Server -> Client

// O : GM Tool
PACKET_DEF( PT_O_G_REQ_GMCOMMAND, GM_PACKET_BASE+200)		// GM 툴에서 GM 서버로 요청
PACKET_DEF( PT_G_O_ANS_GMCOMMAND, GM_PACKET_BASE+201)		// GM 서버에서 GM 툴로 답변	
PACKET_DEF( PT_O_L_REQ_TRY_GM_LOGIN, GM_PACKET_BASE+202)		// GM 툴에서 로그인 서버로 서버리스트 요청
PACKET_DEF( PT_L_O_ANS_TRY_GM_LOGIN, GM_PACKET_BASE+203)		// GM 툴에서 로그인 서버로 서버리스트 요청
PACKET_DEF( PT_G_O_ANS_SERVER_ERROR, GM_PACKET_BASE+209)	// GMTool, GmServer, ImmServer, CenterServer간 연결 에러
PACKET_DEF( PT_O_N_REQ_CHECK_LOGINED_USER, GM_PACKET_BASE+210)
PACKET_DEF( PT_N_O_ANS_CHECK_LOGINED_USER, GM_PACKET_BASE+211)
PACKET_DEF( PT_O_C_REQ_SEND_GM_CHAT, GM_PACKET_BASE+212)
PACKET_DEF( PT_C_O_ANS_SEND_GM_CHAT, GM_PACKET_BASE+213)
PACKET_DEF( PT_O_C_REQ_GM_CHAT_END, GM_PACKET_BASE+214)
//PACKET_DEF( PT_C_O_ANS_GM_CHAT_END, GM_PACKET_BASE+215)

// Consent Packet define
PACKET_DEF(PT_IM_CN_REQ_LOGIN_AUTH,			PACKET_CONSENT_PACKET+1)
PACKET_DEF(PT_CN_IM_ANS_LOGIN_AUTH,			PACKET_CONSENT_PACKET+2)
PACKET_DEF(PT_CN_IM_ANS_LOGIN_GALA,			PACKET_CONSENT_PACKET+3)
PACKET_DEF(PT_IM_CN_REQ_LOGIN_LOGIN,		PACKET_CONSENT_PACKET+4)
PACKET_DEF(PT_CN_IM_ANS_LOGIN_LOGIN,		PACKET_CONSENT_PACKET+5)
PACKET_DEF(PT_IM_CN_ANS_LOGIN_LOGIN_FAILED,	PACKET_CONSENT_PACKET+6)
PACKET_DEF(PT_IM_CN_NFY_LOGOUT_AUTH,		PACKET_CONSENT_PACKET+7)
PACKET_DEF(PT_IM_CN_NFY_LOGOUT_LOGIN,		PACKET_CONSENT_PACKET+8)
PACKET_DEF(PT_CN_IM_NFY_LOGINBLOCKED,		PACKET_CONSENT_PACKET+9)
PACKET_DEF(PT_IM_CN_NFY_SERVICE_TERMINATE,	PACKET_CONSENT_PACKET+10)// 서비스를 종료하겠다.
PACKET_DEF(PT_IM_CN_REQ_LOGIN_AUTH_GALA,	PACKET_CONSENT_PACKET+11)
PACKET_DEF(PT_CN_IM_NFY_USER_TERMINATE,			PACKET_CONSENT_PACKET+12)// 유저를 끊어라
PACKET_DEF(PT_IM_CN_ANS_USER_TERMINATE_ERROR,	PACKET_CONSENT_PACKET+13)
PACKET_DEF(PT_IM_CN_ANS_SYNC_LOGINUSERLIST,	PACKET_CONSENT_PACKET+14)
PACKET_DEF(PT_A_CN_REQ_QUERY_CASH,			PACKET_CONSENT_PACKET+15)
PACKET_DEF(PT_CN_A_ANS_QUERY_CASH,			PACKET_CONSENT_PACKET+16)
PACKET_DEF(PT_N_X_REQ_CASH,					PACKET_CONSENT_PACKET+17)
PACKET_DEF(PT_X_N_ANS_CASH,					PACKET_CONSENT_PACKET+18)
PACKET_DEF(PT_A_CN_REQ_BUYCASHITEM,			PACKET_CONSENT_PACKET+19)
PACKET_DEF(PT_CN_A_ANS_BUYCASHITEM,			PACKET_CONSENT_PACKET+20)
PACKET_DEF(PT_A_CN_REQ_EXPANDTIEM,			PACKET_CONSENT_PACKET+21)
PACKET_DEF(PT_CN_A_ANS_EXPANDTIEM,			PACKET_CONSENT_PACKET+22)
PACKET_DEF(PT_A_CN_REQ_SENDGIFT,			PACKET_CONSENT_PACKET+23)
PACKET_DEF(PT_CN_A_ANS_SENDGIFT,			PACKET_CONSENT_PACKET+24)
PACKET_DEF(PT_A_CN_REQ_BUYCASHITEM_ROLLBACK,	PACKET_CONSENT_PACKET+25)
PACKET_DEF(PT_CN_A_ANS_BUYCASHITEM_ROLLBACK,	PACKET_CONSENT_PACKET+26)
PACKET_DEF(PT_A_CN_REQ_CASH_ROLLBACK,		PACKET_CONSENT_PACKET+27)
PACKET_DEF(PT_CN_A_ANS_CASH_ROLLBACK,		PACKET_CONSENT_PACKET+28)
PACKET_DEF(PT_A_CN_REQ_OM_BUY_ARTICLE,		PACKET_CONSENT_PACKET+29)
PACKET_DEF(PT_CN_A_ANS_OM_BUY_ARTICLE,		PACKET_CONSENT_PACKET+30)
PACKET_DEF(PT_A_CN_REQ_ADDCASH,				PACKET_CONSENT_PACKET+31)
PACKET_DEF(PT_CN_A_ANS_ADDCASH,				PACKET_CONSENT_PACKET+32)
PACKET_DEF(PT_A_CN_REQ_OM_REG_ARTICLE,		PACKET_CONSENT_PACKET+33)
PACKET_DEF(PT_CN_A_ANS_OM_REG_ARTICLE,		PACKET_CONSENT_PACKET+34)

PACKET_DEF(PT_IM_CN_REQ_LOGIN_AUTH_JAPAN,	PACKET_CONSENT_PACKET+35)
PACKET_DEF(PT_A_CN_NFY_TRAN_COMMIT,			PACKET_CONSENT_PACKET+36)
PACKET_DEF(PT_A_CN_NFY_TRAN_ROLLBACK,		PACKET_CONSENT_PACKET+37)
PACKET_DEF(PT_CN_A_ANS_TRAN_COMMIT,			PACKET_CONSENT_PACKET+38)

PACKET_DEF(PT_IM_CN_REQ_LOGIN_AUTH_NC,	PACKET_CONSENT_PACKET+39)
PACKET_DEF(PT_CN_IM_ANS_LOGIN_AUTH_NC,	PACKET_CONSENT_PACKET+40)
PACKET_DEF(PT_IM_CN_NFY_LOGOUT_NC,		PACKET_CONSENT_PACKET+41)
PACKET_DEF(PT_A_CN_REQ_DELETE_ITEMS,	PACKET_CONSENT_PACKET+42) // 구매,선물등으로 아이템이 정상적으로 적용되었다면 이것을 꼭 날려줘야 한다.
PACKET_DEF(PT_A_CN_ANS_DELETE_ITEMS,	PACKET_CONSENT_PACKET+43)
PACKET_DEF(PT_CN_A_NFY_CASH_NC,			PACKET_CONSENT_PACKET+44)
PACKET_DEF(PT_IM_CN_ANS_CASH_ERROR,		PACKET_CONSENT_PACKET+45)
PACKET_DEF(PT_CN_A_NFY_ITEM,			PACKET_CONSENT_PACKET+46) // 웹에서의 구매가 전달.
PACKET_DEF(PT_IM_CN_ANS_ITEM_ERROR,		PACKET_CONSENT_PACKET+47)

// 그라비티 연동
PACKET_DEF(PT_IM_CN_REQ_LOGIN_AUTH_GRAVITY,		PACKET_CONSENT_PACKET+50) // 로그인 인증
PACKET_DEF(PT_CN_IM_ANS_LOGIN_AUTH_GRAVITY,		PACKET_CONSENT_PACKET+51)
PACKET_DEF(PT_IM_CN_NFY_LOGOUT_GRAVITY,			PACKET_CONSENT_PACKET+52)
PACKET_DEF(PT_IM_CN_NFY_BLOCKUSER_GRAVITY,		PACKET_CONSENT_PACKET+53) // CM툴 블럭을 빌링 서버로 알려 줌



#endif // WEAPON_LOHENGRIN_PACKET_PACKETTYPE2_H