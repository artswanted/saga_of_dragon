<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
	Microsoft ResX Schema 
	
	Version 2.0
	
	The primary goals of this format is to allow a simple XML format 
	that is mostly human readable. The generation and parsing of the 
	various data types are done through the TypeConverter classes 
	associated with the data types.
	
	Example:
	
	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>
				
	There are any number of "resheader" rows that contain simple 
	name/value pairs.
	
	Each data row contains a name, and value. The row also contains a 
	type or mimetype. Type corresponds to a .NET class that support 
	text/value conversion through the TypeConverter architecture. 
	Classes that don't support this are serialized and stored with the 
	mimetype set.
	
	The mimetype is used for serialized objects, and tells the 
	ResXResourceReader how to depersist the object. This is currently not 
	extensible. For a given mimetype the value must be set accordingly:
	
	Note - application/x-microsoft.net.object.binary.base64 is the format 
	that the ResXResourceWriter will generate, however the reader can 
	read any of the formats listed below.
	
	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.
	
	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
	<xsd:element name="root" msdata:IsDataSet="true">
	  <xsd:complexType>
		<xsd:choice maxOccurs="unbounded">
		  <xsd:element name="metadata">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" />
			  </xsd:sequence>
			  <xsd:attribute name="name" use="required" type="xsd:string" />
			  <xsd:attribute name="type" type="xsd:string" />
			  <xsd:attribute name="mimetype" type="xsd:string" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="assembly">
			<xsd:complexType>
			  <xsd:attribute name="alias" type="xsd:string" />
			  <xsd:attribute name="name" type="xsd:string" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="data">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
				<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
			  <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
			  <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="resheader">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" />
			</xsd:complexType>
		  </xsd:element>
		</xsd:choice>
	  </xsd:complexType>
	</xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
	<value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
	<value>2.0</value>
  </resheader>
  <resheader name="reader">
	<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
	<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="btnOK.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
	<value>True</value>
  </metadata>
  <metadata name="pictNDLLogo.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
	<value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictNDLLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
	<value>
		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
</value>
  </data>
  <metadata name="lblAboutText.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
	<value>True</value>
  </metadata>
  <metadata name="lnklblNDLWebsite.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
	<value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
	<value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
	<value>
		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
		AADgAwAA+AcAAA==
</value>
  </data>
</root>